<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testEquals</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>OHLCItem</name></type> <name>item1</name> <init>= <expr><operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2006</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>OHLCItem</name></type> <name>item2</name> <init>= <expr><operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2006</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>item2</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// period</comment>
        <expr_stmt><expr><name>item1</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>item2</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// open</comment>
        <expr_stmt><expr><name>item1</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>item2</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// high</comment>
        <expr_stmt><expr><name>item1</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">4.4</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>item2</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">4.4</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// low</comment>
        <expr_stmt><expr><name>item1</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">4.4</literal></expr></argument>, <argument><expr><literal type="number">1.1</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>item2</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">4.4</literal></expr></argument>, <argument><expr><literal type="number">1.1</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// close</comment>
        <expr_stmt><expr><name>item1</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">4.4</literal></expr></argument>, <argument><expr><literal type="number">1.1</literal></expr></argument>, <argument><expr><literal type="number">3.3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>item2</name> <operator>=</operator> <operator>new</operator> <call><name>OHLCItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">4.4</literal></expr></argument>, <argument><expr><literal type="number">1.1</literal></expr></argument>, <argument><expr><literal type="number">3.3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>item1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>item2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>