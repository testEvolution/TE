<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testEquals</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Day</name></type> <name>day1</name> <init>= <expr><operator>new</operator> <call><name>Day</name><argument_list>(<argument><expr><literal type="number">29</literal></expr></argument>, <argument><expr><name><name>MonthConstants</name><operator>.</operator><name>MARCH</name></name></expr></argument>, <argument><expr><literal type="number">2002</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Hour</name></type> <name>hour1</name> <init>= <expr><operator>new</operator> <call><name>Hour</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>day1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Minute</name></type> <name>minute1</name> <init>= <expr><operator>new</operator> <call><name>Minute</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>hour1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Second</name></type> <name>second1</name> <init>= <expr><operator>new</operator> <call><name>Second</name><argument_list>(<argument><expr><literal type="number">34</literal></expr></argument>, <argument><expr><name>minute1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Millisecond</name></type> <name>milli1</name> <init>= <expr><operator>new</operator> <call><name>Millisecond</name><argument_list>(<argument><expr><literal type="number">999</literal></expr></argument>, <argument><expr><name>second1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Day</name></type> <name>day2</name> <init>= <expr><operator>new</operator> <call><name>Day</name><argument_list>(<argument><expr><literal type="number">29</literal></expr></argument>, <argument><expr><name><name>MonthConstants</name><operator>.</operator><name>MARCH</name></name></expr></argument>, <argument><expr><literal type="number">2002</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Hour</name></type> <name>hour2</name> <init>= <expr><operator>new</operator> <call><name>Hour</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>day2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Minute</name></type> <name>minute2</name> <init>= <expr><operator>new</operator> <call><name>Minute</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>hour2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Second</name></type> <name>second2</name> <init>= <expr><operator>new</operator> <call><name>Second</name><argument_list>(<argument><expr><literal type="number">34</literal></expr></argument>, <argument><expr><name>minute2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Millisecond</name></type> <name>milli2</name> <init>= <expr><operator>new</operator> <call><name>Millisecond</name><argument_list>(<argument><expr><literal type="number">999</literal></expr></argument>, <argument><expr><name>second2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>milli1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>milli2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>