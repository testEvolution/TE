<unit><function><type><specifier>private</specifier> <name>TaskSeriesCollection</name></type> <name>createCollection3</name><parameter_list>()</parameter_list> <block>{<block_content>

        <comment type="line">// define subtasks</comment>
        <decl_stmt><decl><type><name>Task</name></type> <name>sub1</name> <init>= <expr><operator>new</operator> <call><name>Task</name><argument_list>(<argument><expr><literal type="string">"Sub1"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">111</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Task</name></type> <name>sub2</name> <init>= <expr><operator>new</operator> <call><name>Task</name><argument_list>(<argument><expr><literal type="string">"Sub2"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">222</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Task</name></type> <name>sub3</name> <init>= <expr><operator>new</operator> <call><name>Task</name><argument_list>(<argument><expr><literal type="string">"Sub3"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">33</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">333</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Task</name></type> <name>sub4</name> <init>= <expr><operator>new</operator> <call><name>Task</name><argument_list>(<argument><expr><literal type="string">"Sub4"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">44</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">444</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Task</name></type> <name>sub5</name> <init>= <expr><operator>new</operator> <call><name>Task</name><argument_list>(<argument><expr><literal type="string">"Sub5"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">55</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">555</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Task</name></type> <name>sub6</name> <init>= <expr><operator>new</operator> <call><name>Task</name><argument_list>(<argument><expr><literal type="string">"Sub6"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">66</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">666</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sub1</name><operator>.</operator><name>setPercentComplete</name></name><argument_list>(<argument><expr><literal type="number">0.111</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sub2</name><operator>.</operator><name>setPercentComplete</name></name><argument_list>(<argument><expr><literal type="number">0.222</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sub3</name><operator>.</operator><name>setPercentComplete</name></name><argument_list>(<argument><expr><literal type="number">0.333</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sub4</name><operator>.</operator><name>setPercentComplete</name></name><argument_list>(<argument><expr><literal type="number">0.444</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sub5</name><operator>.</operator><name>setPercentComplete</name></name><argument_list>(<argument><expr><literal type="number">0.555</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sub6</name><operator>.</operator><name>setPercentComplete</name></name><argument_list>(<argument><expr><literal type="number">0.666</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>TaskSeries</name></type> <name>seriesA</name> <init>= <expr><operator>new</operator> <call><name>TaskSeries</name><argument_list>(<argument><expr><literal type="string">"Series A"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Task</name></type> <name>taskA1</name> <init>= <expr><operator>new</operator> <call><name>Task</name><argument_list>(<argument><expr><literal type="string">"Task 1"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleTimePeriod</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">200</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>taskA1</name><operator>.</operator><name>setPercentComplete</name></name><argument_list>(<argument><expr><literal type="number">0.1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>taskA1</name><operator>.</operator><name>addSubtask</name></name><argument_list>(<argument><expr><name>sub1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Task</name></type> <name>taskA2</name> <init>= <expr><operator>new</operator> <call><name>Task</name><argument_list>(<argument><expr><literal type="string">"Task 2"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleTimePeriod</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">220</literal></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">350</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>taskA2</name><operator>.</operator><name>setPercentComplete</name></name><argument_list>(<argument><expr><literal type="number">0.2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>taskA2</name><operator>.</operator><name>addSubtask</name></name><argument_list>(<argument><expr><name>sub2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>taskA2</name><operator>.</operator><name>addSubtask</name></name><argument_list>(<argument><expr><name>sub3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>seriesA</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>taskA1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>seriesA</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>taskA2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>TaskSeries</name></type> <name>seriesB</name> <init>= <expr><operator>new</operator> <call><name>TaskSeries</name><argument_list>(<argument><expr><literal type="string">"Series B"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// note that we don't define taskB1</comment>
        <decl_stmt><decl><type><name>Task</name></type> <name>taskB2</name> <init>= <expr><operator>new</operator> <call><name>Task</name><argument_list>(<argument><expr><literal type="string">"Task 2"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleTimePeriod</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">2220</literal></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">3350</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>taskB2</name><operator>.</operator><name>setPercentComplete</name></name><argument_list>(<argument><expr><literal type="number">0.3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>taskB2</name><operator>.</operator><name>addSubtask</name></name><argument_list>(<argument><expr><name>sub4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>taskB2</name><operator>.</operator><name>addSubtask</name></name><argument_list>(<argument><expr><name>sub5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>taskB2</name><operator>.</operator><name>addSubtask</name></name><argument_list>(<argument><expr><name>sub6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>seriesB</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>taskB2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>TaskSeriesCollection</name></type> <name>tsc</name> <init>= <expr><operator>new</operator> <call><name>TaskSeriesCollection</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>tsc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>seriesA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>tsc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>seriesB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return>return <expr><name>tsc</name></expr>;</return>
    </block_content>}</block></function>

    </unit>