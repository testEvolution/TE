<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testEquals</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>PeriodAxisLabelInfo</name></type> <name>info1</name> <init>= <expr><operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name><name>Day</name><operator>.</operator><name>class</name></name></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"d"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>PeriodAxisLabelInfo</name></type> <name>info2</name> <init>= <expr><operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name><name>Day</name><operator>.</operator><name>class</name></name></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"d"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info2</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Class</name></type> <name>c1</name> <init>= <expr><name><name>Day</name><operator>.</operator><name>class</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Class</name></type> <name>c2</name> <init>= <expr><name><name>Month</name><operator>.</operator><name>class</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>DateFormat</name></type> <name>df1</name> <init>= <expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"d"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>DateFormat</name></type> <name>df2</name> <init>= <expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"MMM"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>RectangleInsets</name></type> <name>sp1</name> <init>= <expr><operator>new</operator> <call><name>RectangleInsets</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>RectangleInsets</name></type> <name>sp2</name> <init>= <expr><operator>new</operator> <call><name>RectangleInsets</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Font</name></type> <name>lf1</name> <init>= <expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"SansSerif"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>PLAIN</name></name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Font</name></type> <name>lf2</name> <init>= <expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"SansSerif"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Paint</name></type> <name>lp1</name> <init>= <expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Paint</name></type> <name>lp2</name> <init>= <expr><name><name>Color</name><operator>.</operator><name>BLUE</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>b1</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>b2</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Stroke</name></type> <name>s1</name> <init>= <expr><operator>new</operator> <call><name>BasicStroke</name><argument_list>(<argument><expr><literal type="number">0.5f</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Stroke</name></type> <name>s2</name> <init>= <expr><operator>new</operator> <call><name>BasicStroke</name><argument_list>(<argument><expr><literal type="number">0.25f</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Paint</name></type> <name>dp1</name> <init>= <expr><name><name>Color</name><operator>.</operator><name>RED</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Paint</name></type> <name>dp2</name> <init>= <expr><name><name>Color</name><operator>.</operator><name>GREEN</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><name>info1</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df1</name></expr></argument>, <argument><expr><name>sp1</name></expr></argument>, <argument><expr><name>lf1</name></expr></argument>, <argument><expr><name>lp1</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>info2</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c1</name></expr></argument>, <argument><expr><name>df1</name></expr></argument>, <argument><expr><name>sp1</name></expr></argument>, <argument><expr><name>lf1</name></expr></argument>, <argument><expr><name>lp1</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>info2</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df1</name></expr></argument>, <argument><expr><name>sp1</name></expr></argument>, <argument><expr><name>lf1</name></expr></argument>, <argument><expr><name>lp1</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>info1</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp1</name></expr></argument>, <argument><expr><name>lf1</name></expr></argument>, <argument><expr><name>lp1</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>info2</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp1</name></expr></argument>, <argument><expr><name>lf1</name></expr></argument>, <argument><expr><name>lp1</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>info1</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf1</name></expr></argument>, <argument><expr><name>lp1</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>info2</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf1</name></expr></argument>, <argument><expr><name>lp1</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>info1</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp1</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>info2</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp1</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>info1</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp2</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>info2</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp2</name></expr></argument>, <argument><expr><name>b1</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>info1</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp2</name></expr></argument>, <argument><expr><name>b2</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>info2</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp2</name></expr></argument>, <argument><expr><name>b2</name></expr></argument>, <argument><expr><name>s1</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>info1</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp2</name></expr></argument>, <argument><expr><name>b2</name></expr></argument>, <argument><expr><name>s2</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>info2</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp2</name></expr></argument>, <argument><expr><name>b2</name></expr></argument>, <argument><expr><name>s2</name></expr></argument>, <argument><expr><name>dp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>info1</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp2</name></expr></argument>, <argument><expr><name>b2</name></expr></argument>, <argument><expr><name>s2</name></expr></argument>, <argument><expr><name>dp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>info2</name> <operator>=</operator> <operator>new</operator> <call><name>PeriodAxisLabelInfo</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><name>df2</name></expr></argument>, <argument><expr><name>sp2</name></expr></argument>, <argument><expr><name>lf2</name></expr></argument>, <argument><expr><name>lp2</name></expr></argument>, <argument><expr><name>b2</name></expr></argument>, <argument><expr><name>s2</name></expr></argument>, <argument><expr><name>dp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>info1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>info2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

    </unit>