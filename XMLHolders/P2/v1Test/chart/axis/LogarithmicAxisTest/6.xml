<unit><function><type><specifier>private</specifier> <name>void</name></type> <name>checkSwitchedLogPowRoundTrip</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>axis</name><operator>.</operator><name>switchedLog10</name></name><argument_list>(
                 <argument><expr><call><name><name>this</name><operator>.</operator><name>axis</name><operator>.</operator><name>switchedPow10</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>EPSILON</name></expr></argument>, <argument><expr><literal type="string">"log(pow(x)) = x"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>axis</name><operator>.</operator><name>switchedPow10</name></name><argument_list>(
                 <argument><expr><call><name><name>this</name><operator>.</operator><name>axis</name><operator>.</operator><name>switchedLog10</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>EPSILON</name></expr></argument>, <argument><expr><literal type="string">"pow(log(x)) = x"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>

     </unit>