<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testBug25</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>TimeZone</name></type> <name>tz</name> <init>= <expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"GMT"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>GregorianCalendar</name></type> <name>cal</name> <init>= <expr><operator>new</operator> <call><name>GregorianCalendar</name><argument_list>(<argument><expr><name>tz</name></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>UK</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><name>MyDateAxis</name></type> <name>axis</name> <init>= <expr><operator>new</operator> <call><name>MyDateAxis</name><argument_list>(<argument><expr><literal type="string">"25"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setTimeZone</name></name><argument_list>(<argument><expr><name>tz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line">// YEAR</comment>
        <decl_stmt><decl><type><name>DateTickUnit</name></type> <name>ydtu</name> <init>= <expr><operator>new</operator> <call><name>DateTickUnit</name><argument_list>(<argument><expr><name><name>DateTickUnitType</name><operator>.</operator><name>YEAR</name></name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Year</name></type> <name>y</name> <init>= <expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2015</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>ymillis</name> <init>= <expr><call><name><name>y</name><operator>.</operator><name>getFirstMillisecond</name></name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// 1420070400000L</comment>
        <decl_stmt><decl><type><name>Date</name></type> <name>yprev</name> <init>= <expr><call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><name>ymillis</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ydtu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Year</name><argument_list>(<argument><expr><literal type="number">2010</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getFirstMillisecond</name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>yprev</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line">// MONTH </comment>
        <decl_stmt><decl><type><name>DateTickUnit</name></type> <name>mdtu</name> <init>= <expr><operator>new</operator> <call><name>DateTickUnit</name><argument_list>(<argument><expr><name><name>DateTickUnitType</name><operator>.</operator><name>MONTH</name></name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Month</name></type> <name>m</name> <init>= <expr><operator>new</operator> <call><name>Month</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>mmillis</name> <init>= <expr><call><name><name>m</name><operator>.</operator><name>getFirstMillisecond</name></name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
        <decl_stmt><decl><type><name>Date</name></type> <name>mprev</name> <init>= <expr><call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><name>mmillis</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>mdtu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Month</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getFirstMillisecond</name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></argument>, 
                <argument><expr><call><name><name>mprev</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line">// DAY</comment>
        <decl_stmt><decl><type><name>DateTickUnit</name></type> <name>ddtu</name> <init>= <expr><operator>new</operator> <call><name>DateTickUnit</name><argument_list>(<argument><expr><name><name>DateTickUnitType</name><operator>.</operator><name>DAY</name></name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Day</name></type> <name>d</name> <init>= <expr><operator>new</operator> <call><name>Day</name><argument_list>(<argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>dmillis</name> <init>= <expr><call><name><name>d</name><operator>.</operator><name>getFirstMillisecond</name></name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
        <decl_stmt><decl><type><name>Date</name></type> <name>dprev</name> <init>= <expr><call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><name>dmillis</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ddtu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Day</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getFirstMillisecond</name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></argument>, 
                <argument><expr><call><name><name>dprev</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line">// HOUR</comment>
        <decl_stmt><decl><type><name>DateTickUnit</name></type> <name>hdtu</name> <init>= <expr><operator>new</operator> <call><name>DateTickUnit</name><argument_list>(<argument><expr><name><name>DateTickUnitType</name><operator>.</operator><name>HOUR</name></name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Hour</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Hour</name><argument_list>(<argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>hmillis</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getFirstMillisecond</name></name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
        <decl_stmt><decl><type><name>Date</name></type> <name>hprev</name> <init>= <expr><call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><name>hmillis</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>hdtu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Hour</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getFirstMillisecond</name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></argument>, 
                <argument><expr><call><name><name>hprev</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line">// MINUTE</comment>
        <decl_stmt><decl><type><name>DateTickUnit</name></type> <name>mindtu</name> <init>= <expr><operator>new</operator> <call><name>DateTickUnit</name><argument_list>(<argument><expr><name><name>DateTickUnitType</name><operator>.</operator><name>MINUTE</name></name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Minute</name></type> <name>min</name> <init>= <expr><operator>new</operator> <call><name>Minute</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>minmillis</name> <init>= <expr><call><name><name>min</name><operator>.</operator><name>getFirstMillisecond</name></name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// 1472040600000L GMT</comment>
        <decl_stmt><decl><type><name>Date</name></type> <name>minprev</name> <init>= <expr><call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><name>minmillis</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>mindtu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1472040600000L</literal> <operator>-</operator> <literal type="number">5</literal> <operator>*</operator> <literal type="number">60</literal> <operator>*</operator> <literal type="number">1000L</literal></expr></argument>, <argument><expr><call><name><name>minprev</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line">// SECOND </comment>
        <decl_stmt><decl><type><name>DateTickUnit</name></type> <name>sdtu</name> <init>= <expr><operator>new</operator> <call><name>DateTickUnit</name><argument_list>(<argument><expr><name><name>DateTickUnitType</name><operator>.</operator><name>SECOND</name></name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Second</name></type> <name>s</name> <init>= <expr><operator>new</operator> <call><name>Second</name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>smillis</name> <init>= <expr><call><name><name>s</name><operator>.</operator><name>getFirstMillisecond</name></name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
        <decl_stmt><decl><type><name>Date</name></type> <name>sprev</name> <init>= <expr><call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><name>smillis</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>sdtu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Second</name><argument_list>(<argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>getFirstMillisecond</name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>sprev</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line">// MILLISECOND</comment>
        <decl_stmt><decl><type><name>DateTickUnit</name></type> <name>msdtu</name> <init>= <expr><operator>new</operator> <call><name>DateTickUnit</name><argument_list>(<argument><expr><name><name>DateTickUnitType</name><operator>.</operator><name>MILLISECOND</name></name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Millisecond</name></type> <name>ms</name> <init>= <expr><operator>new</operator> <call><name>Millisecond</name><argument_list>(<argument><expr><literal type="number">500</literal></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>msmillis</name> <init>= <expr><call><name><name>ms</name><operator>.</operator><name>getFirstMillisecond</name></name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
        <decl_stmt><decl><type><name>Date</name></type> <name>msprev</name> <init>= <expr><call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><name>msmillis</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>msdtu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Millisecond</name><argument_list>(<argument><expr><literal type="number">490</literal></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">2016</literal></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>getFirstMillisecond</name><argument_list>(<argument><expr><name>cal</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>msprev</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
    </block_content>}</block></function>
    
}</unit>