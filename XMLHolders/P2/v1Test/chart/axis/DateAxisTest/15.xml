<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testPreviousStandardDateDayA</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>MyDateAxis</name></type> <name>axis</name> <init>= <expr><operator>new</operator> <call><name>MyDateAxis</name><argument_list>(<argument><expr><literal type="string">"Day"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Day</name></type> <name>apr12007</name> <init>= <expr><operator>new</operator> <call><name>Day</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Day</name></type> <name>apr22007</name> <init>= <expr><operator>new</operator> <call><name>Day</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2007</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// five dates to check...</comment>
        <decl_stmt><decl><type><name>Date</name></type> <name>d0</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>apr12007</name><operator>.</operator><name>getFirstMillisecond</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>d1</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>apr12007</name><operator>.</operator><name>getFirstMillisecond</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">500L</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>d2</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>apr12007</name><operator>.</operator><name>getMiddleMillisecond</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>d3</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>apr12007</name><operator>.</operator><name>getMiddleMillisecond</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">500L</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>d4</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>apr12007</name><operator>.</operator><name>getLastMillisecond</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>Date</name></type> <name>end</name> <init>= <expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>apr22007</name><operator>.</operator><name>getLastMillisecond</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>DateTickUnit</name></type> <name>unit</name> <init>= <expr><operator>new</operator> <call><name>DateTickUnit</name><argument_list>(<argument><expr><name><name>DateTickUnitType</name><operator>.</operator><name>DAY</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setTickUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// START: check d0 and d1</comment>
        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setTickMarkPosition</name></name><argument_list>(<argument><expr><name><name>DateTickMarkPosition</name><operator>.</operator><name>START</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><name>d0</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>psd</name> <init>= <expr><call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><name>d0</name></expr></argument>, <argument><expr><name>unit</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>nsd</name> <init>= <expr><call><name><name>unit</name><operator>.</operator><name>addToDate</name></name><argument_list>(<argument><expr><name>psd</name></expr></argument>, <argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>psd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <call><name><name>d0</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>nsd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <call><name><name>d0</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><name>d1</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>psd</name> <operator>=</operator> <call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><name>d1</name></expr></argument>, <argument><expr><name>unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>nsd</name> <operator>=</operator> <call><name><name>unit</name><operator>.</operator><name>addToDate</name></name><argument_list>(<argument><expr><name>psd</name></expr></argument>, <argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>psd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <call><name><name>d1</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>nsd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <call><name><name>d1</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// MIDDLE: check d1, d2 and d3</comment>
        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setTickMarkPosition</name></name><argument_list>(<argument><expr><name><name>DateTickMarkPosition</name><operator>.</operator><name>MIDDLE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><name>d1</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>psd</name> <operator>=</operator> <call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><name>d1</name></expr></argument>, <argument><expr><name>unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>nsd</name> <operator>=</operator> <call><name><name>unit</name><operator>.</operator><name>addToDate</name></name><argument_list>(<argument><expr><name>psd</name></expr></argument>, <argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>psd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <call><name><name>d1</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>nsd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <call><name><name>d1</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><name>d2</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>psd</name> <operator>=</operator> <call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><name>d2</name></expr></argument>, <argument><expr><name>unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>nsd</name> <operator>=</operator> <call><name><name>unit</name><operator>.</operator><name>addToDate</name></name><argument_list>(<argument><expr><name>psd</name></expr></argument>, <argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>psd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <call><name><name>d2</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>nsd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <call><name><name>d2</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><name>d3</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>psd</name> <operator>=</operator> <call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><name>d3</name></expr></argument>, <argument><expr><name>unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>nsd</name> <operator>=</operator> <call><name><name>unit</name><operator>.</operator><name>addToDate</name></name><argument_list>(<argument><expr><name>psd</name></expr></argument>, <argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>psd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <call><name><name>d3</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>nsd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <call><name><name>d3</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// END: check d3 and d4</comment>
        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setTickMarkPosition</name></name><argument_list>(<argument><expr><name><name>DateTickMarkPosition</name><operator>.</operator><name>END</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><name>d3</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>psd</name> <operator>=</operator> <call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><name>d3</name></expr></argument>, <argument><expr><name>unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>nsd</name> <operator>=</operator> <call><name><name>unit</name><operator>.</operator><name>addToDate</name></name><argument_list>(<argument><expr><name>psd</name></expr></argument>, <argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>psd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <call><name><name>d3</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>nsd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <call><name><name>d3</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><name>d4</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>psd</name> <operator>=</operator> <call><name><name>axis</name><operator>.</operator><name>previousStandardDate</name></name><argument_list>(<argument><expr><name>d4</name></expr></argument>, <argument><expr><name>unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>nsd</name> <operator>=</operator> <call><name><name>unit</name><operator>.</operator><name>addToDate</name></name><argument_list>(<argument><expr><name>psd</name></expr></argument>, <argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>psd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <call><name><name>d4</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>nsd</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <call><name><name>d4</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>