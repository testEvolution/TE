<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testEquals</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>MonthDateFormat</name></type> <name>mf1</name> <init>= <expr><operator>new</operator> <call><name>MonthDateFormat</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>MonthDateFormat</name></type> <name>mf2</name> <init>= <expr><operator>new</operator> <call><name>MonthDateFormat</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>mf2</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name><name>boolean</name><index>[]</index></name></type> <name>showYear1</name> <init>= <expr><operator>new</operator> <name><name>boolean</name> <index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>showYear1</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        <decl_stmt><decl><type><name><name>boolean</name><index>[]</index></name></type> <name>showYear2</name> <init>= <expr><operator>new</operator> <name><name>boolean</name> <index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>showYear1</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>

        <comment type="line">// time zone</comment>
        <expr_stmt><expr><name>mf1</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>US</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
            <argument><expr><name>showYear1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>mf2</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>US</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
            <argument><expr><name>showYear1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// locale</comment>
        <expr_stmt><expr><name>mf1</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRANCE</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
            <argument><expr><name>showYear1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>mf2</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRANCE</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
            <argument><expr><name>showYear1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// chars</comment>
        <expr_stmt><expr><name>mf1</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRANCE</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
            <argument><expr><name>showYear1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>mf2</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRANCE</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
            <argument><expr><name>showYear1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// showYear[]</comment>
        <expr_stmt><expr><name>mf1</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRANCE</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
            <argument><expr><name>showYear2</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>mf2</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRANCE</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
            <argument><expr><name>showYear2</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// yearFormatter</comment>
        <expr_stmt><expr><name>mf1</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRANCE</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
            <argument><expr><name>showYear2</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yyyy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>mf2</name> <operator>=</operator> <operator>new</operator> <call><name>MonthDateFormat</name><argument_list>(<argument><expr><call><name><name>TimeZone</name><operator>.</operator><name>getTimeZone</name></name><argument_list>(<argument><expr><literal type="string">"PST"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>FRANCE</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
            <argument><expr><name>showYear2</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><literal type="string">"yyyy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>mf1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>mf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

    </unit>