<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testJavascriptEscape</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><call><name><name>ImageMapUtils</name><operator>.</operator><name>javascriptEscape</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"abc"</literal></expr></argument>, <argument><expr><call><name><name>ImageMapUtils</name><operator>.</operator><name>javascriptEscape</name></name><argument_list>(<argument><expr><literal type="string">"abc"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"\\\'"</literal></expr></argument>, <argument><expr><call><name><name>ImageMapUtils</name><operator>.</operator><name>javascriptEscape</name></name><argument_list>(<argument><expr><literal type="string">"\'"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"\\\""</literal></expr></argument>, <argument><expr><call><name><name>ImageMapUtils</name><operator>.</operator><name>javascriptEscape</name></name><argument_list>(<argument><expr><literal type="string">"\""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>   
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"\\\\"</literal></expr></argument>, <argument><expr><call><name><name>ImageMapUtils</name><operator>.</operator><name>javascriptEscape</name></name><argument_list>(<argument><expr><literal type="string">"\\"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

}</unit>