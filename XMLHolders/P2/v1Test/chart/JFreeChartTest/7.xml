<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testSerialization3</name><parameter_list>()</parameter_list> <block>{<block_content>

        <comment type="line">// row keys...</comment>
        <decl_stmt><decl><type><name>String</name></type> <name>series1</name> <init>= <expr><literal type="string">"First"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>series2</name> <init>= <expr><literal type="string">"Second"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>series3</name> <init>= <expr><literal type="string">"Third"</literal></expr></init></decl>;</decl_stmt>

        <comment type="line">// column keys...</comment>
        <decl_stmt><decl><type><name>String</name></type> <name>category1</name> <init>= <expr><literal type="string">"Category 1"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>category2</name> <init>= <expr><literal type="string">"Category 2"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>category3</name> <init>= <expr><literal type="string">"Category 3"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>category4</name> <init>= <expr><literal type="string">"Category 4"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>category5</name> <init>= <expr><literal type="string">"Category 5"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>category6</name> <init>= <expr><literal type="string">"Category 6"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>category7</name> <init>= <expr><literal type="string">"Category 7"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>category8</name> <init>= <expr><literal type="string">"Category 8"</literal></expr></init></decl>;</decl_stmt>

        <comment type="line">// create the dataset...</comment>
        <decl_stmt><decl><type><name>DefaultCategoryDataset</name></type> <name>dataset</name> <init>= <expr><operator>new</operator> <call><name>DefaultCategoryDataset</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><name>series1</name></expr></argument>, <argument><expr><name>category1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><name>series1</name></expr></argument>, <argument><expr><name>category2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">3.0</literal></expr></argument>, <argument><expr><name>series1</name></expr></argument>, <argument><expr><name>category3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">5.0</literal></expr></argument>, <argument><expr><name>series1</name></expr></argument>, <argument><expr><name>category4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">5.0</literal></expr></argument>, <argument><expr><name>series1</name></expr></argument>, <argument><expr><name>category5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">7.0</literal></expr></argument>, <argument><expr><name>series1</name></expr></argument>, <argument><expr><name>category6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">7.0</literal></expr></argument>, <argument><expr><name>series1</name></expr></argument>, <argument><expr><name>category7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">8.0</literal></expr></argument>, <argument><expr><name>series1</name></expr></argument>, <argument><expr><name>category8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">5.0</literal></expr></argument>, <argument><expr><name>series2</name></expr></argument>, <argument><expr><name>category1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">7.0</literal></expr></argument>, <argument><expr><name>series2</name></expr></argument>, <argument><expr><name>category2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">6.0</literal></expr></argument>, <argument><expr><name>series2</name></expr></argument>, <argument><expr><name>category3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">8.0</literal></expr></argument>, <argument><expr><name>series2</name></expr></argument>, <argument><expr><name>category4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><name>series2</name></expr></argument>, <argument><expr><name>category5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><name>series2</name></expr></argument>, <argument><expr><name>category6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><name>series2</name></expr></argument>, <argument><expr><name>category7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><name>series2</name></expr></argument>, <argument><expr><name>category8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><name>series3</name></expr></argument>, <argument><expr><name>category1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">3.0</literal></expr></argument>, <argument><expr><name>series3</name></expr></argument>, <argument><expr><name>category2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><name>series3</name></expr></argument>, <argument><expr><name>category3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">3.0</literal></expr></argument>, <argument><expr><name>series3</name></expr></argument>, <argument><expr><name>category4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">6.0</literal></expr></argument>, <argument><expr><name>series3</name></expr></argument>, <argument><expr><name>category5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">3.0</literal></expr></argument>, <argument><expr><name>series3</name></expr></argument>, <argument><expr><name>category6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><name>series3</name></expr></argument>, <argument><expr><name>category7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>addValue</name></name><argument_list>(<argument><expr><literal type="number">3.0</literal></expr></argument>, <argument><expr><name>series3</name></expr></argument>, <argument><expr><name>category8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// create the chart...</comment>
        <decl_stmt><decl><type><name>JFreeChart</name></type> <name>c1</name> <init>= <expr><call><name><name>ChartFactory</name><operator>.</operator><name>createBarChart</name></name><argument_list>(<argument><expr><literal type="string">"Vertical Bar Chart"</literal></expr></argument>,
                <argument><expr><literal type="string">"Category"</literal></expr></argument>, <argument><expr><literal type="string">"Value"</literal></expr></argument>, <argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>JFreeChart</name></type> <name>c2</name> <init>= <expr><operator>(</operator><name>JFreeChart</name><operator>)</operator> <call><name><name>TestUtils</name><operator>.</operator><name>serialised</name></name><argument_list>(<argument><expr><name>c1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>c1</name></expr></argument>, <argument><expr><name>c2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>