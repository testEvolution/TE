<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testEquals</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>JFreeChart</name></type> <name>chart1</name> <init>= <expr><operator>new</operator> <call><name>JFreeChart</name><argument_list>(<argument><expr><literal type="string">"Title"</literal></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"SansSerif"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>PLAIN</name></name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>PiePlot</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>JFreeChart</name></type> <name>chart2</name> <init>= <expr><operator>new</operator> <call><name>JFreeChart</name><argument_list>(<argument><expr><literal type="string">"Title"</literal></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"SansSerif"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>PLAIN</name></name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>PiePlot</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart2</name></expr></argument>, <argument><expr><name>chart1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// renderingHints</comment>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>setRenderingHints</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RenderingHints</name><argument_list>(
                <argument><expr><name><name>RenderingHints</name><operator>.</operator><name>KEY_TEXT_ANTIALIASING</name></name></expr></argument>,
                <argument><expr><name><name>RenderingHints</name><operator>.</operator><name>VALUE_TEXT_ANTIALIAS_ON</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>setRenderingHints</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RenderingHints</name><argument_list>(
                <argument><expr><name><name>RenderingHints</name><operator>.</operator><name>KEY_TEXT_ANTIALIASING</name></name></expr></argument>,
                <argument><expr><name><name>RenderingHints</name><operator>.</operator><name>VALUE_TEXT_ANTIALIAS_ON</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// borderVisible</comment>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>setBorderVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>setBorderVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// borderStroke</comment>
        <decl_stmt><decl><type><name>BasicStroke</name></type> <name>s</name> <init>= <expr><operator>new</operator> <call><name>BasicStroke</name><argument_list>(<argument><expr><literal type="number">2.0f</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>setBorderStroke</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>setBorderStroke</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// borderPaint</comment>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>setBorderPaint</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>RED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>setBorderPaint</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>RED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// padding</comment>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>setPadding</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RectangleInsets</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>setPadding</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RectangleInsets</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// title</comment>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>setTitle</name></name><argument_list>(<argument><expr><literal type="string">"XYZ"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>setTitle</name></name><argument_list>(<argument><expr><literal type="string">"XYZ"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// subtitles</comment>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>addSubtitle</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TextTitle</name><argument_list>(<argument><expr><literal type="string">"Subtitle"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>addSubtitle</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TextTitle</name><argument_list>(<argument><expr><literal type="string">"Subtitle"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// plot</comment>
        <expr_stmt><expr><name>chart1</name> <operator>=</operator> <operator>new</operator> <call><name>JFreeChart</name><argument_list>(<argument><expr><literal type="string">"Title"</literal></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"SansSerif"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>PLAIN</name></name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>RingPlot</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>chart2</name> <operator>=</operator> <operator>new</operator> <call><name>JFreeChart</name><argument_list>(<argument><expr><literal type="string">"Title"</literal></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"SansSerif"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>PLAIN</name></name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>PiePlot</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>chart2</name> <operator>=</operator> <operator>new</operator> <call><name>JFreeChart</name><argument_list>(<argument><expr><literal type="string">"Title"</literal></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>Font</name><argument_list>(<argument><expr><literal type="string">"SansSerif"</literal></expr></argument>, <argument><expr><name><name>Font</name><operator>.</operator><name>PLAIN</name></name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>RingPlot</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// backgroundPaint</comment>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>setBackgroundPaint</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GradientPaint</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><literal type="number">2.0f</literal></expr></argument>, <argument><expr><name><name>Color</name><operator>.</operator><name>RED</name></name></expr></argument>,
                <argument><expr><literal type="number">3.0f</literal></expr></argument>, <argument><expr><literal type="number">4.0f</literal></expr></argument>, <argument><expr><name><name>Color</name><operator>.</operator><name>BLUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>setBackgroundPaint</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GradientPaint</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><literal type="number">2.0f</literal></expr></argument>, <argument><expr><name><name>Color</name><operator>.</operator><name>RED</name></name></expr></argument>,
                <argument><expr><literal type="number">3.0f</literal></expr></argument>, <argument><expr><literal type="number">4.0f</literal></expr></argument>, <argument><expr><name><name>Color</name><operator>.</operator><name>BLUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line">//        // backgroundImage</comment>
<comment type="line">//        chart1.setBackgroundImage(JFreeChart.INFO.getLogo());</comment>
<comment type="line">//        assertFalse(chart1.equals(chart2));</comment>
<comment type="line">//        chart2.setBackgroundImage(JFreeChart.INFO.getLogo());</comment>
<comment type="line">//        assertEquals(chart1, chart2);</comment>

        <comment type="line">// backgroundImageAlignment</comment>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>setBackgroundImageAlignment</name></name><argument_list>(<argument><expr><name><name>Align</name><operator>.</operator><name>BOTTOM_LEFT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>setBackgroundImageAlignment</name></name><argument_list>(<argument><expr><name><name>Align</name><operator>.</operator><name>BOTTOM_LEFT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// backgroundImageAlpha</comment>
        <expr_stmt><expr><call><name><name>chart1</name><operator>.</operator><name>setBackgroundImageAlpha</name></name><argument_list>(<argument><expr><literal type="number">0.1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>chart1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>chart2</name><operator>.</operator><name>setBackgroundImageAlpha</name></name><argument_list>(<argument><expr><literal type="number">0.1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>chart1</name></expr></argument>, <argument><expr><name>chart2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>