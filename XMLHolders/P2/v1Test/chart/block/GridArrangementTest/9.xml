<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testNR</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>BlockContainer</name></type> <name>c</name> <init>= <expr><call><name>createTestContainer1</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>RectangleConstraint</name></type> <name>constraint</name> <init>= <expr><call><name><name>RectangleConstraint</name><operator>.</operator><name>NONE</name><operator>.</operator><name>toRangeHeight</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>Range</name><argument_list>(<argument><expr><literal type="number">40.0</literal></expr></argument>, <argument><expr><literal type="number">60.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Size2D</name></type> <name>s</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>arrange</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>constraint</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">90.0</literal></expr></argument>, <argument><expr><name><name>s</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name>EPSILON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">40.0</literal></expr></argument>, <argument><expr><name><name>s</name><operator>.</operator><name>height</name></name></expr></argument>, <argument><expr><name>EPSILON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>