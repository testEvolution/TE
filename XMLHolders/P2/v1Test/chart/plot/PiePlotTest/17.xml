<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testBug1126_e</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CloneNotSupportedException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>DefaultPieDataset</name></type> <name>dataset1</name> <init>= <expr><operator>new</operator> <call><name>DefaultPieDataset</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>PiePlot</name></type> <name>plot1</name> <init>= <expr><operator>new</operator> <call><name>PiePlot</name><argument_list>(<argument><expr><name>dataset1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>plot1</name><operator>.</operator><name>setLabelGenerator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardPieSectionLabelGenerator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>PiePlot</name></type> <name>plot2</name> <init>= <expr><operator>(</operator><name>PiePlot</name><operator>)</operator> <call><name><name>plot1</name><operator>.</operator><name>clone</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>StandardPieSectionLabelGenerator</name></type> <name>g2</name> 
                <init>= <expr><operator>(</operator><name>StandardPieSectionLabelGenerator</name><operator>)</operator> <call><name><name>plot2</name><operator>.</operator><name>getLabelGenerator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>g2</name><operator>.</operator><name>setAttributedLabel</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>AttributedString</name><argument_list>(<argument><expr><literal type="string">"TESTING"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertNotEquals</name><argument_list>(<argument><expr><name>plot1</name></expr></argument>, <argument><expr><name>plot2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

}</unit>