<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testAddRangeMarker</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>CategoryPlot</name></type> <name>plot</name> <init>= <expr><operator>new</operator> <call><name>CategoryPlot</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Marker</name></type> <name>m</name> <init>= <expr><operator>new</operator> <call><name>ValueMarker</name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>plot</name><operator>.</operator><name>addRangeMarker</name></name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>EventListener</name></argument>&gt;</argument_list></name></type> <name>listeners</name> <init>= <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name><name>m</name><operator>.</operator><name>getListeners</name></name><argument_list>(
                <argument><expr><name><name>MarkerChangeListener</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>listeners</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>plot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>plot</name><operator>.</operator><name>clearRangeMarkers</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>listeners</name> <operator>=</operator> <call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name><name>m</name><operator>.</operator><name>getListeners</name></name><argument_list>(<argument><expr><name><name>MarkerChangeListener</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>listeners</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>plot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>