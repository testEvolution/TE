<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testSetRenderer</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>XYPlot</name></type> <name>plot</name> <init>= <expr><operator>new</operator> <call><name>XYPlot</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>XYItemRenderer</name></type> <name>renderer</name> <init>= <expr><operator>new</operator> <call><name>XYLineAndShapeRenderer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>plot</name><operator>.</operator><name>setRenderer</name></name><argument_list>(<argument><expr><name>renderer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// now make a change to the renderer and see if it triggers a plot</comment>
        <comment type="line">// change event...</comment>
        <decl_stmt><decl><type><name>MyPlotChangeListener</name></type> <name>listener</name> <init>= <expr><operator>new</operator> <call><name>MyPlotChangeListener</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>plot</name><operator>.</operator><name>addChangeListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>renderer</name><operator>.</operator><name>setSeriesPaint</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>listener</name><operator>.</operator><name>getEvent</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>