<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testTranslateToJava2D_NumberAxisAndMargin</name><parameter_list>()</parameter_list> <block>{<block_content>
        
        <decl_stmt><decl><type><name>Rectangle2D</name></type> <name>dataArea</name> <init>= <expr><operator>new</operator> <call><name><name>Rectangle2D</name><operator>.</operator><name>Double</name></name><argument_list>(<argument><expr><literal type="number">10.0</literal></expr></argument>, <argument><expr><literal type="number">10.0</literal></expr></argument>, <argument><expr><literal type="number">80.0</literal></expr></argument>, <argument><expr><literal type="number">80.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>ValueAxis</name></type> <name>axis</name> <init>= <expr><operator>new</operator> <call><name>NumberAxis</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>axis</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><operator>-</operator><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>PolarPlot</name></type> <name>plot</name> <init>= <expr><operator>new</operator> <call><name>PolarPlot</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>axis</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>plot</name><operator>.</operator><name>setAngleOffset</name></name><argument_list>(<argument><expr><literal type="number">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Point</name></type> <name>point</name> <init>= <expr><call><name><name>plot</name><operator>.</operator><name>translateToJava2D</name></name><argument_list>(<argument><expr><literal type="number">0.0</literal></expr></argument>, <argument><expr><literal type="number">10.0</literal></expr></argument>, <argument><expr><name>axis</name></expr></argument>, <argument><expr><name>dataArea</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">110.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getX</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">50.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getY</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>point</name> <operator>=</operator> <call><name><name>plot</name><operator>.</operator><name>translateToJava2D</name></name><argument_list>(<argument><expr><literal type="number">90.0</literal></expr></argument>, <argument><expr><literal type="number">5.0</literal></expr></argument>, <argument><expr><name>axis</name></expr></argument>, <argument><expr><name>dataArea</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">50.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getX</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">85.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getY</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>point</name> <operator>=</operator> <call><name><name>plot</name><operator>.</operator><name>translateToJava2D</name></name><argument_list>(<argument><expr><literal type="number">45.0</literal></expr></argument>, <argument><expr><literal type="number">20.0</literal></expr></argument>, <argument><expr><name>axis</name></expr></argument>, <argument><expr><name>dataArea</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">128.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getX</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">128.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getY</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>point</name> <operator>=</operator> <call><name><name>plot</name><operator>.</operator><name>translateToJava2D</name></name><argument_list>(<argument><expr><literal type="number">135.0</literal></expr></argument>, <argument><expr><literal type="number">20.0</literal></expr></argument>, <argument><expr><name>axis</name></expr></argument>, <argument><expr><name>dataArea</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">28.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getX</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">128.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getY</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>point</name> <operator>=</operator> <call><name><name>plot</name><operator>.</operator><name>translateToJava2D</name></name><argument_list>(<argument><expr><literal type="number">225.0</literal></expr></argument>, <argument><expr><literal type="number">15.0</literal></expr></argument>, <argument><expr><name>axis</name></expr></argument>, <argument><expr><name>dataArea</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">10.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getX</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">10.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getY</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>point</name> <operator>=</operator> <call><name><name>plot</name><operator>.</operator><name>translateToJava2D</name></name><argument_list>(<argument><expr><literal type="number">315.0</literal></expr></argument>, <argument><expr><literal type="number">15.0</literal></expr></argument>, <argument><expr><name>axis</name></expr></argument>, <argument><expr><name>dataArea</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">110.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getX</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">10.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getY</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <expr_stmt><expr><name>point</name> <operator>=</operator> <call><name><name>plot</name><operator>.</operator><name>translateToJava2D</name></name><argument_list>(<argument><expr><literal type="number">21.0</literal></expr></argument>, <argument><expr><literal type="number">11.5</literal></expr></argument>, <argument><expr><name>axis</name></expr></argument>, <argument><expr><name>dataArea</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">113.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getX</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">74.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getY</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <expr_stmt><expr><name>point</name> <operator>=</operator> <call><name><name>plot</name><operator>.</operator><name>translateToJava2D</name></name><argument_list>(<argument><expr><literal type="number">162.0</literal></expr></argument>, <argument><expr><literal type="number">7.0</literal></expr></argument>, <argument><expr><name>axis</name></expr></argument>, <argument><expr><name>dataArea</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">7.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getX</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">64.0</literal></expr></argument>, <argument><expr><call><name><name>point</name><operator>.</operator><name>getY</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
    </block_content>}</block></function>

    </unit>