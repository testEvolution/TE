<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testGeneral</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>HMSNumberFormat</name></type> <name>formatter</name> <init>= <expr><operator>new</operator> <call><name>HMSNumberFormat</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"00:00:00"</literal></expr></argument>, <argument><expr><call><name><name>formatter</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"00:00:59"</literal></expr></argument>, <argument><expr><call><name><name>formatter</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="number">59</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"00:01:01"</literal></expr></argument>, <argument><expr><call><name><name>formatter</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="number">61</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"00:59:59"</literal></expr></argument>, <argument><expr><call><name><name>formatter</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="number">3599</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"01:00:00"</literal></expr></argument>, <argument><expr><call><name><name>formatter</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="number">3600</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"01:00:01"</literal></expr></argument>, <argument><expr><call><name><name>formatter</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="number">3601</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</unit>