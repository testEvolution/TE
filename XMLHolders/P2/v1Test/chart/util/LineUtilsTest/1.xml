<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testClipLine</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Rectangle2D</name></type> <name>rect</name> <init>= <expr><operator>new</operator> <call><name><name>Rectangle2D</name><operator>.</operator><name>Double</name></name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Line2D</name></type> <name>line</name> <init>= <expr><operator>new</operator> <call><name><name>Line2D</name><operator>.</operator><name>Double</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">0.0</literal></expr></argument>, <argument><expr><literal type="number">0.0</literal></expr></argument>, <argument><expr><literal type="number">0.0</literal></expr></argument>, <argument><expr><literal type="number">0.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">1.6</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">1.6</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">2.6</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">2.6</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>, <argument><expr><literal type="number">1.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>, <argument><expr><literal type="number">1.6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">1.6</literal></expr></argument>, <argument><expr><literal type="number">1.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.6</literal></expr></argument>, <argument><expr><literal type="number">1.6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">2.6</literal></expr></argument>, <argument><expr><literal type="number">1.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">1.4545454545454546</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>,
                <argument><expr><literal type="number">1.2857142857142858</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">2.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">2.6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>, <argument><expr><literal type="number">2.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.55</literal></expr></argument>, <argument><expr><literal type="number">1.2142857142857142</literal></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">2.5</literal></expr></argument>, <argument><expr><literal type="number">2.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.025</literal></expr></argument>, <argument><expr><literal type="number">1.9285714285714284</literal></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">2.5</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">1.25</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>line</name><operator>.</operator><name>setLine</name></name><argument_list>(<argument><expr><literal type="number">1.5</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>, <argument><expr><literal type="number">2.5</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>LineUtils</name><operator>.</operator><name>clipLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><name>rect</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>lineEquals</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">1.25</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

}</unit>