<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>test2033092</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>RelativeDateFormat</name></type> <name>rdf</name> <init>= <expr><operator>new</operator> <call><name>RelativeDateFormat</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>rdf</name><operator>.</operator><name>setShowZeroDays</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>rdf</name><operator>.</operator><name>setShowZeroHours</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>rdf</name><operator>.</operator><name>setMinuteSuffix</name></name><argument_list>(<argument><expr><literal type="string">":"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>rdf</name><operator>.</operator><name>setHourSuffix</name></name><argument_list>(<argument><expr><literal type="string">":"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>rdf</name><operator>.</operator><name>setSecondSuffix</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>DecimalFormat</name></type> <name>hoursFormatter</name> <init>= <expr><operator>new</operator> <call><name>DecimalFormat</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>hoursFormatter</name><operator>.</operator><name>setMaximumFractionDigits</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>hoursFormatter</name><operator>.</operator><name>setMaximumIntegerDigits</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>hoursFormatter</name><operator>.</operator><name>setMinimumIntegerDigits</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>rdf</name><operator>.</operator><name>setHourFormatter</name></name><argument_list>(<argument><expr><name>hoursFormatter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>DecimalFormat</name></type> <name>minsFormatter</name> <init>= <expr><operator>new</operator> <call><name>DecimalFormat</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>minsFormatter</name><operator>.</operator><name>setMaximumFractionDigits</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>minsFormatter</name><operator>.</operator><name>setMaximumIntegerDigits</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>minsFormatter</name><operator>.</operator><name>setMinimumIntegerDigits</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>rdf</name><operator>.</operator><name>setMinuteFormatter</name></name><argument_list>(<argument><expr><name>minsFormatter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>DecimalFormat</name></type> <name>secondsFormatter</name> <init>= <expr><operator>new</operator> <call><name>DecimalFormat</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>secondsFormatter</name><operator>.</operator><name>setMaximumFractionDigits</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>secondsFormatter</name><operator>.</operator><name>setMaximumIntegerDigits</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>secondsFormatter</name><operator>.</operator><name>setMinimumIntegerDigits</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>rdf</name><operator>.</operator><name>setSecondFormatter</name></name><argument_list>(<argument><expr><name>secondsFormatter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>s</name> <init>= <expr><call><name><name>rdf</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">2</literal> <operator>*</operator> <literal type="number">60L</literal> <operator>*</operator> <literal type="number">60L</literal> <operator>*</operator> <literal type="number">1000L</literal> <operator>+</operator> <literal type="number">122500L</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"02:02:02"</literal></expr></argument>, <argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>