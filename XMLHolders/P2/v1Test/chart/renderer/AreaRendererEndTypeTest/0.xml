<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testEquals</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>AreaRendererEndType</name><operator>.</operator><name>LEVEL</name></name></expr></argument>, <argument><expr><name><name>AreaRendererEndType</name><operator>.</operator><name>LEVEL</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>AreaRendererEndType</name><operator>.</operator><name>TAPER</name></name></expr></argument>, <argument><expr><name><name>AreaRendererEndType</name><operator>.</operator><name>TAPER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
            <argument><expr><name><name>AreaRendererEndType</name><operator>.</operator><name>TRUNCATE</name></name></expr></argument>, <argument><expr><name><name>AreaRendererEndType</name><operator>.</operator><name>TRUNCATE</name></name></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>