<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testEquals</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>BarRenderer</name></type> <name>r1</name> <init>= <expr><operator>new</operator> <call><name>BarRenderer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>BarRenderer</name></type> <name>r2</name> <init>= <expr><operator>new</operator> <call><name>BarRenderer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>r1</name></expr></argument>, <argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// the plot field is NOT tested</comment>

        <comment type="line">// toolTipGeneratorList</comment>
        <expr_stmt><expr><call><name><name>r1</name><operator>.</operator><name>setSeriesToolTipGenerator</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>StandardCategoryToolTipGenerator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>r2</name><operator>.</operator><name>setSeriesToolTipGenerator</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>StandardCategoryToolTipGenerator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// defaultToolTipGenerator</comment>
        <expr_stmt><expr><call><name><name>r1</name><operator>.</operator><name>setDefaultToolTipGenerator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardCategoryToolTipGenerator</name><argument_list>(<argument><expr><literal type="string">"{2}"</literal></expr></argument>,
                <argument><expr><call><name><name>NumberFormat</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>r2</name><operator>.</operator><name>setDefaultToolTipGenerator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardCategoryToolTipGenerator</name><argument_list>(<argument><expr><literal type="string">"{2}"</literal></expr></argument>,
                <argument><expr><call><name><name>NumberFormat</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// itemLabelGeneratorList</comment>
        <expr_stmt><expr><call><name><name>r1</name><operator>.</operator><name>setSeriesItemLabelGenerator</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>StandardCategoryItemLabelGenerator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>r2</name><operator>.</operator><name>setSeriesItemLabelGenerator</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,
                <argument><expr><operator>new</operator> <call><name>StandardCategoryItemLabelGenerator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// defaultItemLabelGenerator</comment>
        <expr_stmt><expr><call><name><name>r1</name><operator>.</operator><name>setDefaultItemLabelGenerator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardCategoryItemLabelGenerator</name><argument_list>(
                <argument><expr><literal type="string">"{2}"</literal></expr></argument>, <argument><expr><call><name><name>NumberFormat</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>r2</name><operator>.</operator><name>setDefaultItemLabelGenerator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardCategoryItemLabelGenerator</name><argument_list>(
                <argument><expr><literal type="string">"{2}"</literal></expr></argument>, <argument><expr><call><name><name>NumberFormat</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// urlGeneratorList</comment>
        <expr_stmt><expr><call><name><name>r1</name><operator>.</operator><name>setSeriesItemURLGenerator</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>StandardCategoryURLGenerator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>r2</name><operator>.</operator><name>setSeriesItemURLGenerator</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>StandardCategoryURLGenerator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// defaultItemURLGenerator</comment>
        <expr_stmt><expr><call><name><name>r1</name><operator>.</operator><name>setDefaultItemURLGenerator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardCategoryURLGenerator</name><argument_list>(
                <argument><expr><literal type="string">"abc.html"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>r2</name><operator>.</operator><name>setDefaultItemURLGenerator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardCategoryURLGenerator</name><argument_list>(
                <argument><expr><literal type="string">"abc.html"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// legendItemLabelGenerator</comment>
        <expr_stmt><expr><call><name><name>r1</name><operator>.</operator><name>setLegendItemLabelGenerator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardCategorySeriesLabelGenerator</name><argument_list>(
                <argument><expr><literal type="string">"XYZ"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>r2</name><operator>.</operator><name>setLegendItemLabelGenerator</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardCategorySeriesLabelGenerator</name><argument_list>(
                <argument><expr><literal type="string">"XYZ"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// legendItemToolTipGenerator</comment>
        <expr_stmt><expr><call><name><name>r1</name><operator>.</operator><name>setLegendItemToolTipGenerator</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>StandardCategorySeriesLabelGenerator</name><argument_list>(<argument><expr><literal type="string">"ToolTip"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>r2</name><operator>.</operator><name>setLegendItemToolTipGenerator</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>StandardCategorySeriesLabelGenerator</name><argument_list>(<argument><expr><literal type="string">"ToolTip"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// legendItemURLGenerator</comment>
        <expr_stmt><expr><call><name><name>r1</name><operator>.</operator><name>setLegendItemURLGenerator</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>StandardCategorySeriesLabelGenerator</name><argument_list>(<argument><expr><literal type="string">"URL"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>r2</name><operator>.</operator><name>setLegendItemURLGenerator</name></name><argument_list>(
                <argument><expr><operator>new</operator> <call><name>StandardCategorySeriesLabelGenerator</name><argument_list>(<argument><expr><literal type="string">"URL"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>r2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>