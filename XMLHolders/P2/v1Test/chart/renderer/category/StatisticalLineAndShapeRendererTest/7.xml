<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testFindRangeBounds</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>StatisticalLineAndShapeRenderer</name></type> <name>r</name>
                <init>= <expr><operator>new</operator> <call><name>StatisticalLineAndShapeRenderer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>r</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// an empty dataset should return a null range</comment>
        <decl_stmt><decl><type><name>DefaultStatisticalCategoryDataset</name></type> <name>dataset</name>
                <init>= <expr><operator>new</operator> <call><name>DefaultStatisticalCategoryDataset</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>r</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="string">"R1"</literal></expr></argument>, <argument><expr><literal type="string">"C1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>-</operator><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">0.2</literal></expr></argument>, <argument><expr><literal type="string">"R1"</literal></expr></argument>, <argument><expr><literal type="string">"C2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"R1"</literal></expr></argument>, <argument><expr><literal type="string">"C3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>dataset</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="number">5.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="string">"R2"</literal></expr></argument>, <argument><expr><literal type="string">"C3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">6.0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// check that the series visible flag is observed</comment>
        <expr_stmt><expr><call><name><name>r</name><operator>.</operator><name>setSeriesVisible</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>Boolean</name><operator>.</operator><name>FALSE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">2.2</literal></expr></argument>, <argument><expr><literal type="number">1.5</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

}</unit>