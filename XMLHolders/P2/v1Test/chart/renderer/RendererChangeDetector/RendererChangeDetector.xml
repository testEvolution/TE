<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="H:\Research\TestEvolution\DataAnalysis\jfreechart-1.5.2\jfreechart-1.5.2\src\test\java\org\jfree\chart\renderer\RendererChangeDetector.java"><comment type="block">/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2020, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
 * USA.
 *
 * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. 
 * Other names may be trademarks of their respective owners.]
 *
 * ---------------------------
 * RendererChangeDetector.java
 * ---------------------------
 * (C) Copyright 2003-2008, by Object Refinery Limited and Contributors.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   -;
 *
 * Changes
 * -------
 * 29-Oct-2003 : Version 1 (DG);
 *
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>jfree</name><operator>.</operator><name>chart</name><operator>.</operator><name>renderer</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>jfree</name><operator>.</operator><name>chart</name><operator>.</operator><name>event</name><operator>.</operator><name>RendererChangeEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>jfree</name><operator>.</operator><name>chart</name><operator>.</operator><name>event</name><operator>.</operator><name>RendererChangeListener</name></name>;</import>

<comment type="block" format="javadoc">/**
 * A simple class for detecting whether or not a renderer has generated
 * a {@link RendererChangeEvent}.
 */</comment>
<class><specifier>public</specifier> class <name>RendererChangeDetector</name> <super_list><implements>implements <super><name>RendererChangeListener</name></super></implements></super_list> <block>{

    <comment type="block" format="javadoc">/** A flag that records whether or not a change event has been received. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>notified</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Creates a new detector.
     */</comment>
    <constructor><specifier>public</specifier> <name>RendererChangeDetector</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>notified</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <comment type="block" format="javadoc">/**
     * Returns the flag that indicates whether or not a change event has been
     * received.
     *
     * @return The flag.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>getNotified</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name><name>this</name><operator>.</operator><name>notified</name></name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Sets the flag that indicates whether or not a change event has been
     * received.
     *
     * @param notified  the new value of the flag.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setNotified</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>notified</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>notified</name></name> <operator>=</operator> <name>notified</name></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Receives a {@link RendererChangeEvent} from a renderer.
     *
     * @param event  the event.
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>rendererChanged</name><parameter_list>(<parameter><decl><type><name>RendererChangeEvent</name></type> <name>event</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>notified</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    </block_content>}</block></function>

}</block></class>
</unit>
