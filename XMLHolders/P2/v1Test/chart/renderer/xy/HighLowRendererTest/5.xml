<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testFindRangeBounds</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>HighLowRenderer</name></type> <name>renderer</name> <init>= <expr><operator>new</operator> <call><name>HighLowRenderer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>OHLCDataItem</name></type> <name>item1</name> <init>= <expr><operator>new</operator> <call><name>OHLCDataItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">4.0</literal></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>,
                <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>OHLCDataset</name></type> <name>dataset</name> <init>= <expr><operator>new</operator> <call><name>DefaultOHLCDataset</name><argument_list>(<argument><expr><literal type="string">"S1"</literal></expr></argument>,
                <argument><expr><operator>new</operator> <name><name>OHLCDataItem</name><index>[]</index></name> <block>{<expr><name>item1</name></expr>}</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Range</name></type> <name>range</name> <init>= <expr><call><name><name>renderer</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">4.0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>OHLCDataItem</name></type> <name>item2</name> <init>= <expr><operator>new</operator> <call><name>OHLCDataItem</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">3.0</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1.0</literal></expr></argument>,
                <argument><expr><literal type="number">3.0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>dataset</name> <operator>=</operator> <operator>new</operator> <call><name>DefaultOHLCDataset</name><argument_list>(<argument><expr><literal type="string">"S1"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>OHLCDataItem</name><index>[]</index></name> <block>{<expr><name>item1</name></expr>,
                <expr><name>item2</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>range</name> <operator>=</operator> <call><name><name>renderer</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Range</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1.0</literal></expr></argument>, <argument><expr><literal type="number">4.0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// try an empty dataset - should return a null range</comment>
        <expr_stmt><expr><name>dataset</name> <operator>=</operator> <operator>new</operator> <call><name>DefaultOHLCDataset</name><argument_list>(<argument><expr><literal type="string">"S1"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>OHLCDataItem</name><index>[]</index></name> <block>{}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>range</name> <operator>=</operator> <call><name><name>renderer</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><name>dataset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><name>range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// try a null dataset - should return a null range</comment>
        <expr_stmt><expr><name>range</name> <operator>=</operator> <call><name><name>renderer</name><operator>.</operator><name>findRangeBounds</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><name>range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

}</unit>