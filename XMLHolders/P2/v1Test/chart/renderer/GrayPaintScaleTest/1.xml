<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testGetPaint</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>GrayPaintScale</name></type> <name>gps</name> <init>= <expr><operator>new</operator> <call><name>GrayPaintScale</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Color</name></type> <name>c</name> <init>= <expr><operator>(</operator><name>Color</name><operator>)</operator> <call><name><name>gps</name><operator>.</operator><name>getPaint</name></name><argument_list>(<argument><expr><literal type="number">0.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>c</name> <operator>=</operator> <operator>(</operator><name>Color</name><operator>)</operator> <call><name><name>gps</name><operator>.</operator><name>getPaint</name></name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>WHITE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// check lookup values that are outside the bounds - see bug report</comment>
        <comment type="line">// 1767315</comment>
        <expr_stmt><expr><name>c</name> <operator>=</operator> <operator>(</operator><name>Color</name><operator>)</operator> <call><name><name>gps</name><operator>.</operator><name>getPaint</name></name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>c</name> <operator>=</operator> <operator>(</operator><name>Color</name><operator>)</operator> <call><name><name>gps</name><operator>.</operator><name>getPaint</name></name><argument_list>(<argument><expr><literal type="number">1.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>WHITE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>