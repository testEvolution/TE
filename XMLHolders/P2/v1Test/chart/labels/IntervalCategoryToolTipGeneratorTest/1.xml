<unit><function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testEquals2</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>IntervalCategoryToolTipGenerator</name></type> <name>g1</name>
                <init>= <expr><operator>new</operator> <call><name>IntervalCategoryToolTipGenerator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>StandardCategoryToolTipGenerator</name></type> <name>g2</name>
                <init>= <expr><operator>new</operator> <call><name>StandardCategoryToolTipGenerator</name><argument_list>(
                <argument><expr><name><name>IntervalCategoryToolTipGenerator</name><operator>.</operator><name>DEFAULT_TOOL_TIP_FORMAT_STRING</name></name></expr></argument>,
                <argument><expr><call><name><name>NumberFormat</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    </unit>