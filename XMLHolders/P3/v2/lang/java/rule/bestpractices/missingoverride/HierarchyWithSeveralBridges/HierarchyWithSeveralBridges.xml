<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="H:\Research\TestEvolution\DataAnalysis\pmd-pmd_releases-6.21.0\pmd-pmd_releases-6.21.0\pmd-java\src\test\java\net\sourceforge\pmd\lang\java\rule\bestpractices\missingoverride\HierarchyWithSeveralBridges.java"><comment type="block" format="javadoc">/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */</comment>

<package>package <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>java</name><operator>.</operator><name>rule</name><operator>.</operator><name>bestpractices</name><operator>.</operator><name>missingoverride</name></name>;</package>

<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>ast</name><operator>.</operator><name>Node</name></name>;</import>
<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>java</name><operator>.</operator><name>ast</name><operator>.</operator><name>ASTType</name></name>;</import>
<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>java</name><operator>.</operator><name>ast</name><operator>.</operator><name>AbstractJavaTypeNode</name></name>;</import>
<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>java</name><operator>.</operator><name>ast</name><operator>.</operator><name>JavaNode</name></name>;</import>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>HierarchyWithSeveralBridges</name><parameter_list>&lt;<parameter><name>T</name> <extends>extends <name>Node</name></extends></parameter>&gt;</parameter_list></name> <block>{

    <function_decl><type><specifier>abstract</specifier> <name>void</name></type> <name>foo</name><parameter_list>(<parameter><decl><type><name>T</name></type> <name>node</name></decl></parameter>)</parameter_list>;</function_decl>

    <class><specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name><name>SubclassOne</name><parameter_list>&lt;<parameter><name>T</name> <extends>extends <name>JavaNode</name></extends></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name><name>HierarchyWithSeveralBridges</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></super></extends></super_list> <block>{

        <function_decl><annotation>@<name>Override</name></annotation>
        <type><specifier>abstract</specifier> <name>void</name></type> <name>foo</name><parameter_list>(<parameter><decl><type><name>T</name></type> <name>node</name></decl></parameter>)</parameter_list>;</function_decl>
    }</block></class>

    <class><specifier>public</specifier> <specifier>abstract</specifier> <specifier>static</specifier> class <name><name>SubclassTwo</name><parameter_list>&lt;<parameter><name>T</name> <extends>extends <name>AbstractJavaTypeNode</name></extends></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name><name>SubclassOne</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></super></extends></super_list> <block>{
        <function><annotation>@<name>Override</name></annotation>
        <type><name>void</name></type> <name>foo</name><parameter_list>(<parameter><decl><type><name>T</name></type> <name>node</name></decl></parameter>)</parameter_list> <block>{<block_content>

        </block_content>}</block></function>
    }</block></class>


    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Concrete</name> <super_list><extends>extends <super><name><name>SubclassTwo</name><argument_list type="generic">&lt;<argument><name>ASTType</name></argument>&gt;</argument_list></name></super></extends></super_list> <block>{

        <comment type="line">// bridges: foo(AbstractJavaTypeNode), foo(JavaNode), foo(Node)</comment>

        <function><annotation>@<name>Override</name></annotation>
        <type><name>void</name></type> <name>foo</name><parameter_list>(<parameter><decl><type><name>ASTType</name></type> <name>node</name></decl></parameter>)</parameter_list> <block>{<block_content>

        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
