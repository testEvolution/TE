<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="H:\Research\TestEvolution\DataAnalysis\pmd-pmd_releases-6.21.0\pmd-pmd_releases-6.21.0\pmd-java\src\test\java\net\sourceforge\pmd\lang\java\rule\bestpractices\missingoverride\EnumWithInterfaces.java"><comment type="block" format="javadoc">/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */</comment>

<package>package <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>java</name><operator>.</operator><name>rule</name><operator>.</operator><name>bestpractices</name><operator>.</operator><name>missingoverride</name></name>;</package>

<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>java</name><operator>.</operator><name>ast</name><operator>.</operator><name>ASTAnyTypeDeclaration</name></name>;</import>
<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Metric</name></name>;</import>
<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricKey</name></name>;</import>


<comment type="block" format="javadoc">/**
 * @author ClÃ©ment Fournier
 * @since 6.2.0
 */</comment>
<enum><specifier>public</specifier> enum <name>EnumWithInterfaces</name> <super_list><implements>implements <super><name><name>MetricKey</name><argument_list type="generic">&lt;<argument><name>ASTAnyTypeDeclaration</name></argument>&gt;</argument_list></name></super></implements></super_list> <block>{
    <decl><name>Foo</name> <block>{
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name><name>Metric</name><argument_list type="generic">&lt;<argument><name>ASTAnyTypeDeclaration</name></argument>&gt;</argument_list></name></type> <name>getCalculator</name><parameter_list>()</parameter_list> <block>{<block_content>
            <return>return <expr><literal type="null">null</literal></expr>;</return>
        </block_content>}</block></function>
    }</block></decl>;

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>Metric</name><argument_list type="generic">&lt;<argument><name>ASTAnyTypeDeclaration</name></argument>&gt;</argument_list></name></type> <name>getCalculator</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>


    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>supports</name><parameter_list>(<parameter><decl><type><name>ASTAnyTypeDeclaration</name></type> <name>node</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></function>
}</block></enum>
</unit>
