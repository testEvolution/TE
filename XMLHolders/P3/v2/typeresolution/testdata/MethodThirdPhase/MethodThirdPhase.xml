<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="H:\Research\TestEvolution\DataAnalysis\pmd-pmd_releases-6.21.0\pmd-pmd_releases-6.21.0\pmd-java\src\test\java\net\sourceforge\pmd\typeresolution\testdata\MethodThirdPhase.java"><comment type="block" format="javadoc">/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */</comment>

<package>package <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>testdata</name></name>;</package>

<class><specifier>public</specifier> class <name>MethodThirdPhase</name> <block>{
    <function><type><name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <block>{<block_content>
        <comment type="line">// more args than parameters</comment>
        <decl_stmt><decl><type><name>Exception</name></type> <name>a</name> <init>= <expr><call><name>vararg</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><operator>(</operator><name>Number</name><operator>)</operator> <literal type="null">null</literal></expr></argument>, <argument><expr><operator>(</operator><name>Number</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// less args than parameters</comment>
        <decl_stmt><decl><type><name>Exception</name></type> <name>b</name> <init>= <expr><call><name>vararg</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// component type determined properly</comment>
        <decl_stmt><decl><type><name>int</name></type> <name>c</name> <init>= <expr><call><name>vararg</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// most specific vararg method</comment>
        <decl_stmt><decl><type><name>String</name></type> <name>d</name> <init>= <expr><call><name>mostSpecific</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    </block_content>}</block></function>

    <function><type><name>Exception</name></type> <name>mostSpecific</name><parameter_list>(<parameter><decl><type><name>Number</name><modifier>...</modifier></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>

    <function><type><name>String</name></type> <name>mostSpecific</name><parameter_list>(<parameter><decl><type><name>Integer</name><modifier>...</modifier></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>

    <function><type><name>Exception</name></type> <name>vararg</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>Number</name><modifier>...</modifier></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>

    <function><type><name>int</name></type> <name>vararg</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
