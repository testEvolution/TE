<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="H:\Research\TestEvolution\DataAnalysis\pmd-pmd_releases-6.21.0\pmd-pmd_releases-6.21.0\pmd-java\src\test\java\net\sourceforge\pmd\typeresolution\testdata\FieldAccessNested.java"><comment type="block" format="javadoc">/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */</comment>


<package>package <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>testdata</name></name>;</package>


<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>testdata</name><operator>.</operator><name>dummytypes</name><operator>.</operator><name>SuperClassA</name></name>;</import>


<comment type="block">/*
 * Note: inherited fields of a nested class shadow outer scope variables
 *      Note: only if they are accessible!
 */</comment>
<class><specifier>public</specifier> class <name>FieldAccessNested</name> <block>{
    <decl_stmt><decl><type><specifier>public</specifier> <name>int</name></type> <name>field</name></decl>;</decl_stmt>

    <class><specifier>public</specifier> class <name>Nested</name> <block>{
        <decl_stmt><decl><type><name>SuperClassA</name></type> <name>a</name></decl>;</decl_stmt>

        <function><type><specifier>public</specifier> <name>void</name></type> <name>foo</name><parameter_list>()</parameter_list> <block>{<block_content>
            <comment type="line">// access enclosing scope field</comment>
            <comment type="line">// Primary[Prefix[field]]</comment>
            <expr_stmt><expr><name>field</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>

            <comment type="line">// access field in nested</comment>
            <comment type="line">// Primary[Prefix[a]]</comment>
            <expr_stmt><expr><name>a</name> <operator>=</operator> <operator>new</operator> <call><name>SuperClassA</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>testdata</name><operator>.</operator><name>FieldAccessNested</name><operator>.</operator><name>Nested</name><operator>.</operator><name>this</name><operator>.</operator><name>a</name></name> <operator>=</operator> <operator>new</operator> <call><name>SuperClassA</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>FieldAccessNested</name><operator>.</operator><name>Nested</name><operator>.</operator><name>this</name><operator>.</operator><name>a</name></name> <operator>=</operator> <operator>new</operator> <call><name>SuperClassA</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
