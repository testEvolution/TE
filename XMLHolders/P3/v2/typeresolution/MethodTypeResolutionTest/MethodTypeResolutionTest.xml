<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="H:\Research\TestEvolution\DataAnalysis\pmd-pmd_releases-6.21.0\pmd-pmd_releases-6.21.0\pmd-java\src\test\java\net\sourceforge\pmd\typeresolution\MethodTypeResolutionTest.java"><comment type="block" format="javadoc">/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */</comment>

<package>package <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name></name>;</package>

<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertSame</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>java</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>MethodTypeResolution</name></name>;</import>
<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>lang</name><operator>.</operator><name>java</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>typedefinition</name><operator>.</operator><name>JavaTypeDefinition</name></name>;</import>

<class><specifier>public</specifier> class <name>MethodTypeResolutionTest</name> <block>{

    <function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>testBoxingRules</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name><name>Boolean</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>MethodTypeResolution</name><operator>.</operator><name>boxPrimitive</name></name><argument_list>(<argument><expr><call><name><name>JavaTypeDefinition</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>boolean</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name><name>Double</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>MethodTypeResolution</name><operator>.</operator><name>boxPrimitive</name></name><argument_list>(<argument><expr><call><name><name>JavaTypeDefinition</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>double</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name><name>Float</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>MethodTypeResolution</name><operator>.</operator><name>boxPrimitive</name></name><argument_list>(<argument><expr><call><name><name>JavaTypeDefinition</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>float</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name><name>Long</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>MethodTypeResolution</name><operator>.</operator><name>boxPrimitive</name></name><argument_list>(<argument><expr><call><name><name>JavaTypeDefinition</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>long</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name><name>Integer</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>MethodTypeResolution</name><operator>.</operator><name>boxPrimitive</name></name><argument_list>(<argument><expr><call><name><name>JavaTypeDefinition</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>int</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name><name>Character</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>MethodTypeResolution</name><operator>.</operator><name>boxPrimitive</name></name><argument_list>(<argument><expr><call><name><name>JavaTypeDefinition</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>char</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name><name>Short</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>MethodTypeResolution</name><operator>.</operator><name>boxPrimitive</name></name><argument_list>(<argument><expr><call><name><name>JavaTypeDefinition</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>short</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name><name>Byte</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>MethodTypeResolution</name><operator>.</operator><name>boxPrimitive</name></name><argument_list>(<argument><expr><call><name><name>JavaTypeDefinition</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>byte</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><name><name>Void</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>MethodTypeResolution</name><operator>.</operator><name>boxPrimitive</name></name><argument_list>(<argument><expr><call><name><name>JavaTypeDefinition</name><operator>.</operator><name>forClass</name></name><argument_list>(<argument><expr><name><name>void</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
</unit>
