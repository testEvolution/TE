<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="H:\Research\TestEvolution\DataAnalysis\pmd-pmd_releases-6.20.0\pmd-pmd_releases-6.20.0\pmd-java\src\test\java\net\sourceforge\pmd\typeresolution\testdata\FieldAccessGenericNested.java"><comment type="block" format="javadoc">/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */</comment>

<package>package <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>testdata</name></name>;</package>

<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>testdata</name><operator>.</operator><name>dummytypes</name><operator>.</operator><name>GenericClass</name></name>;</import>

<class><specifier>public</specifier> class <name><name>FieldAccessGenericNested</name><parameter_list>&lt;<parameter><name>T</name> <extends>extends <name>String</name></extends></parameter>&gt;</parameter_list></name> <block>{

    <class><specifier>public</specifier> class <name>Nested</name> <block>{
        <decl_stmt><decl><type><name>Nested</name></type> <name>n</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>T</name></type> <name>field</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>GenericClass</name><argument_list type="generic">&lt;<argument><name>T</name></argument>, <argument><name>Number</name></argument>&gt;</argument_list></name></type> <name>generic</name></decl>;</decl_stmt>

        <function><type><name>void</name></type> <name>foo</name><parameter_list>()</parameter_list> <block>{<block_content>
            <expr_stmt><expr><name><name>n</name><operator>.</operator><name>field</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>n</name><operator>.</operator><name>generic</name><operator>.</operator><name>first</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
