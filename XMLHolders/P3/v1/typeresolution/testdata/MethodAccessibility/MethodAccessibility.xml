<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="H:\Research\TestEvolution\DataAnalysis\pmd-pmd_releases-6.20.0\pmd-pmd_releases-6.20.0\pmd-java\src\test\java\net\sourceforge\pmd\typeresolution\testdata\MethodAccessibility.java"><comment type="block" format="javadoc">/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */</comment>

<package>package <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>testdata</name></name>;</package>

<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>testdata</name><operator>.</operator><name>dummytypes</name><operator>.</operator><name>SuperClassA</name></name>;</import>
<import>import <name><name>net</name><operator>.</operator><name>sourceforge</name><operator>.</operator><name>pmd</name><operator>.</operator><name>typeresolution</name><operator>.</operator><name>testdata</name><operator>.</operator><name>dummytypes</name><operator>.</operator><name>SuperClassB</name></name>;</import>

<class><specifier>public</specifier> class <name>MethodAccessibility</name> <super_list><extends>extends <super><name>SuperClassA</name></super></extends></super_list> <block>{
    <class>class <name>Nested</name> <super_list><extends>extends <super><name>SuperClassB</name></super></extends></super_list> <block>{
        <function><type><name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>SuperClassA</name></type> <name>a</name> <init>= <expr><call><name>inheritedA</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>SuperClassB</name></type> <name>b</name> <init>= <expr><call><name>inheritedB</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
